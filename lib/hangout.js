// Generated by CoffeeScript 1.9.2
(function() {
  var Hangout,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  Hangout = (function() {
    function Hangout(gapi1) {
      this.gapi = gapi1;
      this.notify = bind(this.notify, this);
      this.changeStatus = bind(this.changeStatus, this);
      this.status = 'started';
      this.gapi.hangout.onApiReady.add((function(_this) {
        return function() {
          return _this.gapi.hangout.onair.onBroadcastingChanged.add(_this.changeStatus);
        };
      })(this));
      setInterval(this.send_interval, 10000);
      this.notify();
    }

    Hangout.prototype.changeStatus = function(e) {
      var prev_status;
      console.log("Status: " + this.status);
      prev_status = this.status;
      if (e.isBroadcasting) {
        if (this.status === 'started') {
          this.status = 'broadcasting';
        }
      } else {
        if (this.status === 'broadcasting') {
          this.status = 'finished';
        }
      }
      if (prev_status !== this.status) {
        $('#main').append("<p>change status: " + this.status + "</p>");
        return this.notify();
      }
    };

    Hangout.prototype.notify = function() {
      var callbackUrl, hangoutUrl, isBroadcasting, participants, startData, youTubeLiveId;
      startData = JSON.parse(this.gapi.hangout.getStartData());
      console.log(startData);
      callbackUrl = startData.callbackUrl + startData.hangoutId;
      hangoutUrl = this.gapi.hangout.getHangoutUrl();
      youTubeLiveId = this.gapi.hangout.onair.getYouTubeLiveId();
      participants = this.gapi.hangout.getParticipants();
      isBroadcasting = this.gapi.hangout.onair.isBroadcasting();
      return $.ajax({
        url: callbackUrl,
        dataType: 'text',
        type: 'PUT',
        data: {
          title: startData.title,
          project_id: startData.projectId,
          event_id: startData.eventId,
          category: startData.category,
          host_id: startData.hostId,
          participants: participants,
          hangout_url: hangoutUrl,
          yt_video_id: youTubeLiveId,
          hoa_status: this.status,
          notify: true
        },
        success: function() {
          console.log('ajax.success');
          this.gapi.hangout.data.setValue('status', 'ok');
          $('#main').append("<p>ajax return: success</p>");
          if (this.gapi.hangout.data.getValue('updated') !== 'true') {
            this.gapi.hangout.layout.displayNotice('Connection to WebsiteOne established');
            return this.gapi.hangout.data.setValue('updated', 'true');
          }
        },
        error: function() {
          console.log('ajax.error');
          this.gapi.hangout.data.setValue('status', 'error');
          return $('#main').append("<p>ajax return: error</p>");
        }
      });
    };

    Hangout.prototype.send_interval = function() {
      $('#main').append("<p>2 minutes, Broadcasting: " + (this.gapi.hangout.onair.isBroadcasting()) + "</p>");
      return this.notify();
    };

    return Hangout;

  })();

  $(function() {
    return gadgets.util.registerOnLoadHandler(new Hangout(gapi));
  });

}).call(this);
